S5P6818 裸机编程


1、通用寄存器
R0~R3 ---- 参数传递和返回值。C和汇编是可以混合编程的，可能会有函数调用。
R4~R12 ----用来存放局部变量。 C语言register关键字修饰局部变量。局部变量尽可能存放在R4-R12中，提高访问速度。
R13 ---- SP（stack pointer）栈的指针，用来存放栈的栈顶地址。
R14-----LR（Link register），用来保存子程序的返回地址
R15-----PC（Pragram Counter），用来存放正在执行指令的地址。正在执行的指令是存放在内存中的。

2、状态寄存器
CSPR----Current Status Progam Rister：运算结果的标志、ARM的工作状态、ARM的工作模式
SPSR----Saved Status Progam Rister，ARM处理器在工作模式切换时，用来保存CPSR。

//https://lloydrochester.com/post/c/stack-of-frames-arm/
ARM push/pop指令：这些指令允许我们将寄存器压入和弹出一个完整的降序堆栈。
1. sp寄存器：寄存器sp代表堆栈指针，它存储堆栈顶部的值。Apush将在 32 位 ARM 机器上将堆栈指针递减 1 个字或 4 个字节，并存储sp指向的值。
            该pop指令会将堆栈中的值恢复到寄存器中并递增堆栈指针。
2. fp寄存器。帧指针寄存器在调用函数之前存储堆栈的值。它指向框架的顶部。从fp down的值到 the 的值sp是分配给函数调用的“帧”。fp寄存器是r11
3. lr寄存器。存储函数调用后要执行lr的指令的值。pc当进行分支函数调用以调用函数时，lr将是函数调用之后的指令。因此，一旦函数返回，pc就可以在函数调用结束后直接获取指令。

功能：bl/bx理解bl和bx指令。该bl指令将返回地址放在中，lr并将 设置pc为子程序的地址。该bx指令将 的值设置pc为 的值lr并从那里开始执行。

寻址模式。了解偏移、预索引和后索引寻址模式。通常是必不可少的，我做了下面的数学计算，所以你可以把这些点联系起来。
寄存器如何对应函数调用：函数调用的参数传递给寄存器r0-r3，返回值放在r0. Arm 有一些调用约定。